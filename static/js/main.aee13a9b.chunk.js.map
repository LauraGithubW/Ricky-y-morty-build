{"version":3,"sources":["components/Characters.js","assets/musica.mp3","assets/video.mp4","assets/ricky.jpg","components/Header.js","Pagination.js","assets/spinning-circles.svg","components/Loader.js","components/Message.js","components/EpisodesForm.js","components/Episode.js","Episodes.js","App.js","reportWebVitals.js","index.js"],"names":["Characters","characters","className","style","width","src","image","alt","name","species","status","gender","Header","message","Ricky","Pagination","handlePrev","handleNext","pagination","id","onClick","Loader","display","justifyContent","Cargando","Message","EpisodesForm","episodes","handleChange","flexDirection","alignItems","onChange","map","episode","i","Episode","episodeCard","indice","console","log","youtubeVideo","air_date","href","target","Episodes","useState","setEpisodes","setLoader","setError","urll","setUrl","setEpisodeCard","setUrlNew","setIndice","getEpisodes","url","a","fetch","res","json","data","info","results","ok","statusText","useEffect","Video","autoPlay","loop","muted","Musica","exact","to","e","value","slice","urlNew","then","catch","err","App","setCharacters","setPagination","loader","error","getCharacters","path","character","index","window","scrollTo","top","behavior","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aee13a9b.chunk.js","sourcesContent":["import \"./Characters.css\";\r\nconst Characters = ({ characters }) => {\r\n  //console.log(characters.name);\r\n  return (\r\n    <div className=\"card m-2 bg-primary p-2\" style={{ width: \" 16rem\" }}>\r\n      <img\r\n        src={characters.image}\r\n        className=\"card-img-top\"\r\n        alt={characters.name}\r\n      />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{characters.name}</h5>\r\n      </div>\r\n      <ul className=\"list-group list-group-flush\">\r\n        <li className=\"list-group-item bg-secondary text-white\">\r\n          Specie: {characters.species}\r\n        </li>\r\n        <li className=\"list-group-item bg-secondary text-white\">\r\n          Status: {characters.status}\r\n        </li>\r\n        <li className=\"list-group-item bg-secondary text-white\">\r\n          Gender: {characters.gender}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","export default __webpack_public_path__ + \"static/media/musica.dd470755.mp3\";","export default __webpack_public_path__ + \"static/media/video.b9b354df.mp4\";","export default __webpack_public_path__ + \"static/media/ricky.c23307bf.jpg\";","import Ricky from \"../assets/ricky.jpg\";\r\nimport \"./Header.css\";\r\nconst Header = ({ message }) => {\r\n  return (\r\n    <header className=\"container-fluid  bg-primary  p-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <h1>{message}</h1>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <img src={Ricky} className=\"logo\" alt=\"Ricky and Morty\" />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./Pagination.css\";\r\nconst Pagination = ({ handlePrev, handleNext, pagination }) => {\r\n  return (\r\n    <div className=\"botones\">\r\n      {pagination >= 1 && (\r\n        <button\r\n          id=\"scroll1\"\r\n          onClick={handlePrev}\r\n          className=\"btn btn-outline-dark\"\r\n        >\r\n          Prev\r\n        </button>\r\n      )}\r\n      <button\r\n        id=\"scroll2\"\r\n        onClick={handleNext}\r\n        className=\"btn btn-outline-dark \"\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","export default __webpack_public_path__ + \"static/media/spinning-circles.68c79d44.svg\";","import Cargando from \"../assets/spinning-circles.svg\";\r\nconst Loader = () => {\r\n  return (\r\n    <div style={{ width: \"50%\", display: \"flex\", justifyContent: \"center\" }}>\r\n      <img src={Cargando} alt=\"Loading\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","const Message = () => {\r\n  return (\r\n    <div className=\"bg-danger text-center text-warning p-2 \">\r\n      <h2>Se ha producido un error inesperado</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","const EpisodesForm = ({ episodes, handleChange }) => {\r\n  return (\r\n    <form\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h3>Elige un episodio</h3>\r\n      <select\r\n        className=\"form-select mb-1\"\r\n        aria-label=\".form-select-lg example \"\r\n        style={{ width: \"20%\" }}\r\n        onChange={handleChange}\r\n      >\r\n        {episodes.map((episode, i) => (\r\n          <option id={episode.id} name={i}>\r\n            {episode.id}-{episode.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EpisodesForm;\r\n","import \"./Episode.css\";\r\n\r\nconst Episode = ({ episodeCard, episodes, indice }) => {\r\n  console.log(episodeCard);\r\n  console.log(episodes);\r\n  console.log(indice);\r\n  let youtubeVideo = `https://www.youtube.com/results?search_query=${episodeCard.name}`;\r\n  console.log(youtubeVideo);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div\r\n        className=\"card m-5 bg-primary  text-center  block-center p-2 \"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          width: \"20%\",\r\n        }}\r\n      >\r\n        <img src=\"\" className=\"card-img-top\" alt=\"\" />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">\r\n            <b>Nombre del episodio: </b>\r\n            <span className=\"text-light\">{episodeCard.name}</span>\r\n          </h5>\r\n          <h5 className=\"card-title\">\r\n            <b>Fecha de estreno: </b>\r\n            <span className=\"text-light\">{episodeCard.air_date}</span>\r\n          </h5>\r\n          <a href={youtubeVideo} target=\"_blank\" className=\"link\">\r\n            Ver trailer\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Episode;\r\n","import Header from \"./components/Header\";\r\nimport Video from \"./assets/video.mp4\";\r\nimport { BrowserRouter, Link, NavLink } from \"react-router-dom\";\r\nimport Message from \"./components/Message\";\r\nimport Loader from \"./components/Loader\";\r\nimport \"./Episodes.css\";\r\nimport EpisodesForm from \"./components/EpisodesForm\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Episode from \"./components/Episode\";\r\nimport Musica from \"./assets/musica.mp3\";\r\n\r\nconst Episodes = ({ message }) => {\r\n  const [episodes, setEpisodes] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  let urll = `https://rickandmortyapi.com/api/episode/`;\r\n  const [url, setUrl] = useState(urll);\r\n  const [change, setChange] = useState(\"\");\r\n  const [episodeCard, setEpisodeCard] = useState([]);\r\n  const [urlNew, setUrlNew] = useState(\"\");\r\n  const [indice, setIndice] = useState(1);\r\n\r\n  const getEpisodes = async (url) => {\r\n    try {\r\n      setLoader(true);\r\n      let res = await fetch(url),\r\n        data = await res.json(),\r\n        info = data.results;\r\n\r\n      setEpisodes(info);\r\n      setUrl(urll);\r\n\r\n      if (!res.ok) throw { status: res.status, statusText: res.statusText };\r\n    } catch (err) {\r\n      setError(true);\r\n    }\r\n    setLoader(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEpisodes(urll);\r\n  }, [urll]);\r\n\r\n  const handleChange = (e) => {\r\n    let episode = e.target.value;\r\n    let id = episode.slice(0, 1);\r\n    setIndice(id);\r\n    //console.log(id);\r\n    let urlNew = `https://rickandmortyapi.com/api/episode/${id}`;\r\n    setUrlNew(urlNew);\r\n    //console.log(urlNew);\r\n    fetch(urlNew)\r\n      .then((res) => res.json())\r\n      .then((json) => setEpisodeCard(json))\r\n\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div>\r\n      <Header message=\"Ricky and Morty Episodes\" />\r\n\r\n      <video src={Video} className=\"video\" autoPlay loop muted />\r\n      <audio src={Musica} className=\"musica\" autoPlay loop />\r\n      <div className=\"contenedor\">\r\n        <NavLink className=\"links\" exact to=\"/\">\r\n          Characters\r\n        </NavLink>\r\n        <NavLink className=\"links\" exact to=\"/episodes\">\r\n          Episodes\r\n        </NavLink>\r\n      </div>\r\n      <EpisodesForm episodes={episodes} handleChange={handleChange} />\r\n      <Episode episodeCard={episodeCard} episodes={episodes} indice={indice} />\r\n\r\n      <div className=\"container   p-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n        </div>\r\n\r\n        <div className=\"container-fluid h-100 \">\r\n          <div className=\"row w-100\">\r\n            <div className=\"col-4\"></div>\r\n            <div className=\"col-4\"></div>\r\n            <div className=\"col-4\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Episodes;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Characters from \"./components/Characters\";\nimport \"./App2.css\";\nimport Musica from \"./assets/musica.mp3\";\nimport Video from \"./assets/video.mp4\";\nimport \"./assets/spinning-circles.svg\";\nimport Header from \"./components/Header\";\nimport Pagination from \"./Pagination\";\nimport Loader from \"./components/Loader\";\nimport Message from \"./components/Message\";\nimport { Route, Router, Switch } from \"react-router\";\nimport { BrowserRouter, Link, NavLink } from \"react-router-dom\";\nimport Episodes from \"./Episodes\";\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n\n  const [pagination, setPagination] = useState(1);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n\n  let urll = `https://rickandmortyapi.com/api/character/?page=${pagination}`;\n  const [url, setUrl] = useState(urll);\n\n  const getCharacters = async (url) => {\n    try {\n      setLoader(true);\n      let res = await fetch(url),\n        data = await res.json(),\n        info = data.results;\n\n      setCharacters(info);\n      setUrl(urll);\n\n      //console.log(info);\n      if (!res.ok) throw { status: res.status, statusText: res.statusText };\n    } catch (err) {\n      setError(true);\n    }\n    setLoader(false);\n  };\n  useEffect(() => {\n    getCharacters(urll);\n  }, [urll]);\n\n  const handlePrev = () => {\n    setPagination(pagination - 1);\n    setUrl(`https://rickandmortyapi.com/api/character/?page=${pagination}`);\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n  const handleNext = () => {\n    setPagination(pagination + 1);\n    setUrl(`https://rickandmortyapi.com/api/character/?page=${pagination}`);\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  //console.log(characters);\n  return (\n    <>\n      <BrowserRouter>\n        <Route exact path=\"/\">\n          <Header message=\"Ricky an Morty characters\" />\n\n          <video src={Video} className=\"video\" autoPlay loop muted />\n          <audio src={Musica} className=\"musica\" autoPlay loop />\n          <div className=\"contenedor\">\n            <NavLink className=\"links\" exact to=\"/\">\n              Characters\n            </NavLink>\n            <NavLink className=\"links\" exact to=\"/episodes\">\n              Episodes\n            </NavLink>\n          </div>\n          {loader && <Loader />}\n          <main className=\"container-fluid\">\n            <div className=\"container   p-5\">\n              {!error ? (\n                <div className=\"row\">\n                  {characters.map((character, index) => (\n                    <div className=\"col\">\n                      <Characters key={characters.id} characters={character} />\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <Message />\n              )}\n\n              <div className=\"container-fluid h-100 \">\n                <div className=\"row w-100\">\n                  <div className=\"col-4\"></div>\n                  <div className=\"col-4\">\n                    {!error && (\n                      <Pagination\n                        pagination={pagination}\n                        handlePrev={handlePrev}\n                        handleNext={handleNext}\n                      />\n                    )}\n                  </div>\n                  <div className=\"col-4\"></div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </Route>\n\n        <Route exact path=\"/episodes\" component={Episodes} />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}